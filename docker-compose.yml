services:
  consumer:
    image: consumer:latest
    container_name: consumer
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: streaming
      POSTGRES_DB: postgres
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    depends_on:
      kafka:
        condition: service_healthy

  producer:
    image: producer:latest
    container_name: producer
    depends_on:
      - consumer
    environment:
      KAFKA_BROKER: kafka:9092
      KAFKA_INGESTION_TOPIC: streaming
      KAFKA_LIVE_DATA_TOPIC: live
    ports:
      - "8001:8000"

  backend:
    image: backend:latest
    container_name: backend
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      KAFKA_BROKER: kafka:9092
      KAFKA_TOPIC: live
    ports:
      - "8000:8000"

  frontend:
    image: frontend:latest
    container_name: frontend
    ports:
      - "3000:80"

  # TODO: Spark for batch processing
  # Spark Master
  spark-master:
    image: spark-server:latest
    container_name: spark-master
    env_file:
      - ./batch-processing/.env
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_PORT=7077
      - SPARK_UI_PORT=8080
      - SPARK_RPC_AUTHENTICATION_ENABLED=false
    ports:
      - "8089:8080" # Spark UI
      - "7077:7077" # Spark Master port
    volumes:
      - ./batch-processing:/scripts
      - ./data:/data

  # Spark Worker
  spark-worker:
    image: spark-server:latest
    container_name: spark-worker
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    env_file:
      - ./batch-processing/.env
    depends_on:
      - spark-master
    volumes:
      - ./batch-processing:/scripts
      - ./data:/data

  # Optionally, add a Spark Job Submission service
  spark-submit:
    image: spark-server:latest
    container_name: spark-submit
    depends_on:
      spark-master:
        condition: service_started
      kafka:
        condition: service_healthy
    ports:
      - "8081:8081"
      - "8082:8082"
    environment:
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_CORES=1
      - SPARK_WORKER_MEMORY=512m
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_LOCAL_DIRS=/tmp/spark-temp
    env_file:
      - ./batch-processing/.env
    volumes:
      - ./batch-processing:/scripts
      - ./data:/data
    entrypoint: [ "/bin/bash", "-c", "while true; do echo 'starting script as backend tasks'; sh /scripts/spark-tasks.sh;sleep 1000; done" ]


volumes:
  minio_data:
    driver: local
  postgres_data:
  spark-data:
  # TODO: FastAPI server
